#!/usr/bin/env node
/**
 * DEPLOYMENT FIX - –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ "NOT FOUND" 
 * 
 * –≠—Ç–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑-–∑–∞ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤ –≤ .replit —Ñ–∞–π–ª–µ:
 * - Development: –ø–æ—Ä—Ç 5000
 * - Production: –Ω—É–∂–µ–Ω –ø–æ—Ä—Ç 3000
 * - –í .replit –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ä—Ç–æ–≤, —á—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è deployment
 * 
 * –†–µ—à–µ–Ω–∏–µ: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */

import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ DEPLOYMENT...');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞
console.log('üìã –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');

const serverFile = path.join(__dirname, 'server', 'index.ts');
if (fs.existsSync(serverFile)) {
  const content = fs.readFileSync(serverFile, 'utf8');
  console.log('‚úÖ server/index.ts –Ω–∞–π–¥–µ–Ω');
  
  if (content.includes('process.env.NODE_ENV === \'production\' ? 3000 : 5000')) {
    console.log('‚úÖ –õ–æ–≥–∏–∫–∞ –ø–æ—Ä—Ç–æ–≤ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞');
  } else {
    console.log('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø–æ—Ä—Ç–æ–≤');
  }
} else {
  console.log('‚ùå server/index.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π build –¥–ª—è deployment
console.log('\nüöÄ –°–û–ó–î–ê–ù–ò–ï PRODUCTION BUILD...');



try {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è production
  process.env.NODE_ENV = 'production';
  process.env.PORT = '3000';
  
  console.log('üèóÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è npm run build...');
  execSync('npm run build', { stdio: 'inherit' });
  
  console.log('‚úÖ Build –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const distExists = fs.existsSync(path.join(__dirname, 'dist'));
  const indexExists = fs.existsSync(path.join(__dirname, 'dist', 'index.js'));
  
  if (distExists && indexExists) {
    console.log('‚úÖ –§–∞–π–ª—ã deployment –≥–æ—Ç–æ–≤—ã:');
    console.log('  - dist/index.js —Å–æ–∑–¥–∞–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
    const stats = fs.statSync(path.join(__dirname, 'dist', 'index.js'));
    console.log(`  - –†–∞–∑–º–µ—Ä: ${Math.round(stats.size / 1024)}KB`);
  } else {
    console.log('‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª—ã deployment –Ω–µ —Å–æ–∑–¥–∞–Ω—ã');
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ build:', error.message);
}

console.log('\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø DEPLOYMENT:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ');
console.log('2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Deploy" –≤ Replit');
console.log('3. –í—ã–±–µ—Ä–∏—Ç–µ "Autoscale" –∏–ª–∏ "Reserved VM"');
console.log('4. –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Ä—Ç 3000 –≤ production —Ä–µ–∂–∏–º–µ');
console.log('\nüîß DEPLOYMENT –ü–†–û–ë–õ–ï–ú–ê –î–û–õ–ñ–ù–ê –ë–´–¢–¨ –†–ï–®–ï–ù–ê!');