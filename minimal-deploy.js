#!/usr/bin/env node

// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è Replit deployment –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
import { execSync } from 'child_process';
import { copyFileSync, existsSync, writeFileSync, readFileSync, mkdirSync } from 'fs';
import path from 'path';

console.log('üöÄ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è Replit deployment...\n');

try {
  // 1. –û—á–∏—Å—Ç–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ dist –ø–∞–ø–∫–∏
  console.log('1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ dist –ø–∞–ø–∫–∏...');
  execSync('rm -rf dist', { stdio: 'inherit' });
  mkdirSync('dist', { recursive: true });

  // 2. –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
  console.log('2. –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...');
  execSync('vite build', { stdio: 'inherit' });

  // 3. –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ —Å esbuild (–æ–±—Ö–æ–¥ TypeScript –æ—à–∏–±–æ–∫)
  console.log('3. –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ —Å esbuild...');
  execSync('esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outfile=dist/index.js', { stdio: 'inherit' });

  // 4. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  console.log('4. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  if (existsSync('autoauction.db')) {
    copyFileSync('autoauction.db', 'dist/autoauction.db');
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ (16MB)');
  } else {
    console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }

  // 5. –°–æ–∑–¥–∞–Ω–∏–µ .env.production
  console.log('5. –°–æ–∑–¥–∞–Ω–∏–µ .env.production...');
  const envContent = `NODE_ENV=production
PORT=3000
DATABASE_URL=sqlite:./autoauction.db
`;
  writeFileSync('.env.production', envContent);
  writeFileSync('dist/.env.production', envContent);

  // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  console.log('6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...');
  const stats = execSync('du -h dist/', { encoding: 'utf8' });
  console.log('–†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:', stats);

  // 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production —Å–µ—Ä–≤–µ—Ä–∞
  console.log('7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production —Å–µ—Ä–≤–µ—Ä–∞...');
  try {
    execSync('cd dist && PORT=3000 NODE_ENV=production timeout 5s node index.js', { 
      stdio: 'pipe',
      env: { ...process.env, NODE_ENV: 'production', PORT: '3000' }
    });
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    if (error.message.includes('timeout')) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (—Ç–∞–π–º–∞—É—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫)');
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞:', error.message.slice(0, 200));
    }
  }

  console.log('\nüéâ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìã –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è Replit deployment:');
  console.log('   ‚úÖ dist/index.js - —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('   ‚úÖ dist/autoauction.db - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö');
  console.log('   ‚úÖ dist/public/ - —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥');
  console.log('   ‚úÖ .env.production - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');

  console.log('\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:');
  console.log('   NODE_ENV=production PORT=3000 node dist/index.js');
  
  console.log('\nüí° –î–ª—è deployment –≤ Replit:');
  console.log('   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã');
  console.log('   2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É Deploy –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Replit');
  console.log('   3. –í—ã–±–µ—Ä–∏—Ç–µ Autoscale deployment');
  console.log('   4. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:', error.message);
  process.exit(1);
}