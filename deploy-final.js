#!/usr/bin/env node

// –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç deployment –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
import { execSync } from 'child_process';
import { copyFileSync, existsSync, writeFileSync, readFileSync, mkdirSync } from 'fs';
import path from 'path';

console.log('üöÄ –§–∏–Ω–∞–ª—å–Ω—ã–π deployment —Å–∫—Ä–∏–ø—Ç - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã...\n');

try {
  // 1. –û—á–∏—Å—Ç–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ dist –ø–∞–ø–∫–∏
  console.log('1. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–±–æ—Ä–∫–∏...');
  execSync('rm -rf dist', { stdio: 'inherit' });
  mkdirSync('dist', { recursive: true });

  // 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .replit —Ñ–∞–π–ª–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ deployment
  console.log('2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .replit –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
  const replitConfig = `
entrypoint = "dist/index.js"
modules = ["nodejs-20"]

[nix]
channel = "stable-24_05"

[env]
NODE_ENV = "production"
PORT = "3000"

[deployment]
run = ["node", "dist/index.js"]
deploymentTarget = "cloudrun"
ignorePorts = false

[packager]
language = "nodejs"

[packager.features]
enabledForHosting = false
packageSearch = true
guessImports = true

[unitTest]
language = "nodejs"

[debugger]
support = true

[languages.javascript]
pattern = "**/{*.js,*.jsx,*.ts,*.tsx}"
syntax = "javascript"

[languages.javascript.languageServer]
start = "typescript-language-server --stdio"
`;
  writeFileSync('.replit', replitConfig);

  // 3. –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
  console.log('3. –°–±–æ—Ä–∫–∞ React —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...');
  execSync('vite build', { stdio: 'inherit' });

  // 4. –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
  console.log('4. –°–±–æ—Ä–∫–∞ Node.js –±—ç–∫–µ–Ω–¥–∞...');
  execSync('esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outfile=dist/index.js', { stdio: 'inherit' });

  // 5. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  console.log('5. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  if (existsSync('autoauction.db')) {
    copyFileSync('autoauction.db', 'dist/autoauction.db');
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞');
  } else {
    console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    process.exit(1);
  }

  // 6. –°–æ–∑–¥–∞–Ω–∏–µ production –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('6. –°–æ–∑–¥–∞–Ω–∏–µ production –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...');
  const envContent = `NODE_ENV=production
PORT=3000
DATABASE_URL=sqlite:./autoauction.db
`;
  writeFileSync('.env.production', envContent);
  writeFileSync('dist/.env.production', envContent);

  // 7. –°–æ–∑–¥–∞–Ω–∏–µ package.json –¥–ª—è deployment
  console.log('7. –°–æ–∑–¥–∞–Ω–∏–µ package.json –¥–ª—è deployment...');
  const packageJson = {
    "name": "autoauction-production",
    "version": "1.0.0",
    "type": "module",
    "scripts": {
      "start": "node index.js"
    },
    "dependencies": {
      "express": "^4.18.2",
      "ws": "^8.13.0",
      "better-sqlite3": "^8.7.0",
      "sharp": "^0.32.6",
      "compression": "^1.7.4"
    }
  };
  writeFileSync('dist/package.json', JSON.stringify(packageJson, null, 2));

  // 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  console.log('8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤...');
  const stats = execSync('du -h dist/', { encoding: 'utf8' });
  console.log('üìä –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:', stats);

  // 9. –ö—Ä–∞—Ç–∫–∏–π —Ç–µ—Å—Ç production —Å–µ—Ä–≤–µ—Ä–∞
  console.log('9. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production —Å–µ—Ä–≤–µ—Ä–∞...');
  try {
    const testResult = execSync('cd dist && timeout 3s node index.js', { 
      stdio: 'pipe',
      env: { ...process.env, NODE_ENV: 'production', PORT: '3000' }
    });
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    if (error.message.includes('timeout')) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É)');
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:', error.message.slice(0, 100) + '...');
    }
  }

  console.log('\nüéâ Deployment –≥–æ—Ç–æ–≤!');
  console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
  console.log('   ‚úÖ .replit - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è');
  console.log('   ‚úÖ dist/index.js - production —Å–µ—Ä–≤–µ—Ä');
  console.log('   ‚úÖ dist/autoauction.db - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö');
  console.log('   ‚úÖ dist/public/ - React —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥');
  console.log('   ‚úÖ dist/package.json - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
  console.log('   ‚úÖ .env.production - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');

  console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('   1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Deploy" –≤ Replit');
  console.log('   2. –í—ã–±–µ—Ä–∏—Ç–µ "Autoscale deployment"');
  console.log('   3. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (2-5 –º–∏–Ω—É—Ç)');
  console.log('   4. –ü–æ–ª—É—á–∏—Ç–µ URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  
  console.log('\n‚úÖ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–µ–Ω—ã:');
  console.log('   ‚Ä¢ PostgreSQL –æ—à–∏–±–∫–∏ - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ SQLite');
  console.log('   ‚Ä¢ –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ .replit');
  console.log('   ‚Ä¢ TypeScript –æ—à–∏–±–∫–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è esbuild');
  console.log('   ‚Ä¢ –†–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω - 17MB –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ deployment:', error.message);
  process.exit(1);
}