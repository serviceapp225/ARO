#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ DigitalOcean

import { neon } from '@neondatabase/serverless';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
console.log('DATABASE_URL:', process.env.DATABASE_URL ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');

if (!process.env.DATABASE_URL) {
  console.log('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

try {
  const sql = neon(process.env.DATABASE_URL);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  console.log('üîå –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
  const connection = await sql`SELECT current_database(), current_user, version(), now()`;
  
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
  console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
  console.log('  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', connection[0].current_database);
  console.log('  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', connection[0].current_user);
  console.log('  - –í–µ—Ä—Å–∏—è PostgreSQL:', connection[0].version.split(' ')[1]);
  console.log('  - –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞:', connection[0].now);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã...');
  const tables = await sql`
    SELECT table_name 
    FROM information_schema.tables 
    WHERE table_schema = 'public'
    ORDER BY table_name
  `;
  
  if (tables.length === 0) {
    console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤–æ–∑–º–æ–∂–Ω–æ –±–∞–∑–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  } else {
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü:', tables.length);
    console.log('  –¢–∞–±–ª–∏—Ü—ã:', tables.map(t => t.table_name).join(', '));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    const requiredTables = ['users', 'car_listings', 'bids', 'notifications'];
    const existingTables = tables.map(t => t.table_name);
    const missingTables = requiredTables.filter(table => !existingTables.includes(table));
    
    if (missingTables.length > 0) {
      console.log('‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', missingTables.join(', '));
    } else {
      console.log('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    try {
      const userCount = await sql`SELECT COUNT(*) as count FROM users`;
      const listingCount = await sql`SELECT COUNT(*) as count FROM car_listings`;
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:');
      console.log('  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', userCount[0].count);
      console.log('  - –û–±—ä—è–≤–ª–µ–Ω–∏–π:', listingCount[0].count);
    } catch (error) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.message);
    }
  }
  
  console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!');
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
  console.log('  –¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
  console.log('  –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
  
  if (error.code) {
    console.log('  –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
  }
  
  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
  if (error.message.includes('The endpoint has been disabled')) {
    console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Neon –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∏–ª–∏ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –ª–∏–º–∏—Ç—ã');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ dashboard Neon');
    console.log('   2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ endpoint –∏–ª–∏ —É–≤–µ–ª–∏—á—å—Ç–µ –ª–∏–º–∏—Ç—ã');
    console.log('   3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
  }
  
  if (error.message.includes('client.query is not a function')) {
    console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–µ—Ä—Å–∏–π Drizzle ORM');
    console.log('   1. –û–±–Ω–æ–≤–∏—Ç–µ drizzle-orm –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ @neondatabase/serverless —Å–æ–≤–º–µ—Å—Ç–∏–º');
  }
  
  process.exit(1);
}