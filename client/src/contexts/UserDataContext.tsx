import { createContext, useContext, useState, useEffect } from "react";

interface UserDataContextType {
  userData: {
    fullName: string;
    phoneNumber: string;
    email: string;
    accountType: 'dealer' | 'individual';
    profilePhoto: string | null;
    passportFront: File | null;
    passportBack: File | null;
  };
  updateUserData: (data: Partial<UserDataContextType['userData']>) => void;
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å localStorage
class SafeStorage {
  private static maxAge = 7 * 24 * 60 * 60 * 1000; // 7 –¥–Ω–µ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  
  static setItem(key: string, value: any): boolean {
    try {
      const dataWithTimestamp = {
        data: value,
        timestamp: Date.now()
      };
      localStorage.setItem(key, JSON.stringify(dataWithTimestamp));
      return true;
    } catch (error) {
      if (error instanceof DOMException && error.name === 'QuotaExceededError') {
        console.warn('üßπ localStorage –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω, –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ');
        this.clearOldData();
        try {
          const dataWithTimestamp = {
            data: value,
            timestamp: Date.now()
          };
          localStorage.setItem(key, JSON.stringify(dataWithTimestamp));
          return true;
        } catch (retryError) {
          console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:', retryError);
          return false;
        }
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
        return false;
      }
    }
  }
  
  static getItem(key: string): any {
    try {
      const stored = localStorage.getItem(key);
      if (!stored) return null;
      
      const parsed = JSON.parse(stored);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ timestamp (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
      if (parsed.timestamp && parsed.data) {
        const age = Date.now() - parsed.timestamp;
        if (age > this.maxAge) {
          // –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏, —É–¥–∞–ª—è–µ–º
          localStorage.removeItem(key);
          return null;
        }
        return parsed.data;
      }
      
      // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –±–µ–∑ timestamp, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
      return parsed;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${key} –∏–∑ localStorage:`, error);
      return null;
    }
  }
  
  static clearOldData(): void {
    const keysToRemove: string[] = [];
    const currentTime = Date.now();
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–ª—é—á–∞–º localStorage
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (!key) continue;
      
      try {
        const stored = localStorage.getItem(key);
        if (!stored) continue;
        
        const parsed = JSON.parse(stored);
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å timestamp, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç
        if (parsed.timestamp) {
          const age = currentTime - parsed.timestamp;
          if (age > this.maxAge) {
            keysToRemove.push(key);
          }
        }
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏ –±–µ–∑ timestamp (legacy –¥–∞–Ω–Ω—ã–µ)
        else if (key.startsWith('userData_') || key.includes('tanstack')) {
          keysToRemove.push(key);
        }
      } catch (error) {
        // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, —É–¥–∞–ª—è–µ–º
        keysToRemove.push(key);
      }
    }
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    keysToRemove.forEach(key => {
      try {
        localStorage.removeItem(key);
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫–ª—é—á: ${key}`);
      } catch (error) {
        console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á ${key}:`, error);
      }
    });
    
    console.log(`üßπ –û—á–∏—â–µ–Ω–æ ${keysToRemove.length} —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ localStorage`);
  }
  
  static getStorageSize(): string {
    let total = 0;
    for (let key in localStorage) {
      if (localStorage.hasOwnProperty(key)) {
        total += localStorage[key].length + key.length;
      }
    }
    return `${(total / 1024).toFixed(2)} KB`;
  }
}

const UserDataContext = createContext<UserDataContextType | undefined>(undefined);

export function UserDataProvider({ children }: { children: React.ReactNode }) {
  const [userData, setUserData] = useState({
    fullName: "",
    phoneNumber: "",
    email: "",
    accountType: 'individual' as 'dealer' | 'individual',
    profilePhoto: null as string | null,
    passportFront: null as File | null,
    passportBack: null as File | null,
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É
    localStorage.removeItem('userData');
    SafeStorage.clearOldData();
    
    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–º–µ—Ä–µ localStorage
    console.log(`üìä –†–∞–∑–º–µ—Ä localStorage: ${SafeStorage.getStorageSize()}`);
    
    const demoUserData = SafeStorage.getItem('demo-user');
    let currentPhoneNumber = "";
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (demoUserData) {
      currentPhoneNumber = demoUserData.phoneNumber || "";
      setUserData(prev => ({
        ...prev,
        phoneNumber: currentPhoneNumber
      }));

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ—Å—Ç—å userId
      if (demoUserData.userId) {
        loadProfilePhotoFromDatabase(demoUserData.userId);
      }
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ localStorage
    if (currentPhoneNumber) {
      const userDataKey = `userData_${currentPhoneNumber}`;
      const savedData = SafeStorage.getItem(userDataKey);
      
      if (savedData) {
        setUserData(prev => ({
          ...prev,
          fullName: savedData.fullName || "",
          email: savedData.email || "",
          accountType: savedData.accountType || 'individual',
          // –ù–µ –∑–∞–≥—Ä—É–∂–∞–µ–º profilePhoto –∏–∑ localStorage - –±–µ—Ä–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        }));
      } else {
        // –î–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫—Ä–æ–º–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        setUserData(prev => ({
          ...prev,
          fullName: "",
          email: "",
          accountType: 'individual',
          profilePhoto: null,
        }));
      }
    }
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const loadProfilePhotoFromDatabase = async (userId: number) => {
    try {
      console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
      const response = await fetch(`/api/users/${userId}`);
      if (response.ok) {
        const user = await response.json();
        console.log('üì∏ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å —Ñ–æ—Ç–æ:', !!user.profilePhoto);
        if (user.profilePhoto) {
          setUserData(prev => ({
            ...prev,
            profilePhoto: user.profilePhoto
          }));
          console.log('‚úÖ –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ –ë–î');
        }
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
    }
  };

  const updateUserData = (data: Partial<UserDataContextType['userData']>) => {
    setUserData(prev => {
      const newData = { ...prev, ...data };
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –∏—Å–ø–æ–ª—å–∑—É—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–∞–∫ –∫–ª—é—á
      if (newData.phoneNumber) {
        const userDataKey = `userData_${newData.phoneNumber}`;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ù–ï —Ñ–∞–π–ª—ã –∏ –±–æ–ª—å—à–∏–µ –æ–±—ä–µ–∫—Ç—ã)
        const dataToSave = {
          fullName: newData.fullName || "",
          email: newData.email || "",
          accountType: newData.accountType || 'individual',
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º profilePhoto —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è —Å—Ç—Ä–æ–∫–∞
          profilePhoto: (newData.profilePhoto && newData.profilePhoto.length < 10000) ? newData.profilePhoto : null,
        };
        
        const success = SafeStorage.setItem(userDataKey, dataToSave);
        
        if (!success) {
          console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage');
          // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
        } else {
          console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (${SafeStorage.getStorageSize()})`);
        }
      }
      
      return newData;
    });
  };

  return (
    <UserDataContext.Provider value={{ userData, updateUserData }}>
      {children}
    </UserDataContext.Provider>
  );
}

export function useUserData() {
  const context = useContext(UserDataContext);
  if (context === undefined) {
    throw new Error('useUserData must be used within a UserDataProvider');
  }
  return context;
}