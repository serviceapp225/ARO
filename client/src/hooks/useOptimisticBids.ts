import { useState, useEffect } from 'react';
import { useQueryClient } from '@tanstack/react-query';

interface OptimisticBid {
  listingId: number;
  amount: string;
  timestamp: number;
}

// –•—É–∫ –¥–ª—è –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞–≤–æ–∫
export function useOptimisticBids() {
  const [optimisticBids, setOptimisticBids] = useState<Map<number, OptimisticBid>>(new Map());
  const queryClient = useQueryClient();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–π —Å—Ç–∞–≤–∫–∏
  const addOptimisticBid = (listingId: number, amount: string) => {
    const bid: OptimisticBid = {
      listingId,
      amount,
      timestamp: Date.now()
    };
    
    setOptimisticBids(prev => new Map(prev).set(listingId, bid));
    
    // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à–µ TanStack Query
    queryClient.setQueryData(['/api/listings'], (oldData: any[]) => {
      if (!oldData) return oldData;
      
      return oldData.map(listing => 
        listing.id === listingId 
          ? { ...listing, currentBid: amount }
          : listing
      );
    });
    
    console.log(`üöÄ –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞ ${amount} –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ ${listingId}`);
    
    // –£–¥–∞–ª—è–µ–º –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—É—é —Å—Ç–∞–≤–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      setOptimisticBids(prev => {
        const newMap = new Map(prev);
        newMap.delete(listingId);
        return newMap;
      });
    }, 3000);
  };

  // –ü–æ–ª—É—á–∏—Ç—å –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—É—é —Å—Ç–∞–≤–∫—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞—É–∫—Ü–∏–æ–Ω–∞
  const getOptimisticBid = (listingId: number) => {
    return optimisticBids.get(listingId);
  };

  return {
    addOptimisticBid,
    getOptimisticBid,
    optimisticBids
  };
}