import { useQuery, useQueryClient } from '@tanstack/react-query';
import { useEffect, useRef } from 'react';

export function useTimestampSync() {
  const queryClient = useQueryClient();
  const lastTimestamp = useRef<number>(0);

  // –ü–æ–ª—É—á–∞–µ–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–∞–≤–∫–∏
  const { data: timestampData } = useQuery({
    queryKey: ['/api/bid-updates/timestamp'],
    refetchInterval: 500, // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 500–º—Å
    staleTime: 0, // –í—Å–µ–≥–¥–∞ —Å—á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏
    gcTime: 0, // –ù–µ –∫—ç—à–∏—Ä—É–µ–º
  });

  useEffect(() => {
    if (timestampData?.timestamp && timestampData.timestamp > lastTimestamp.current) {
      console.log('üöÄ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫');
      console.log('üìä Timestamp:', timestampData.timestamp, '–ü–æ—Å–ª–µ–¥–Ω–∏–π:', lastTimestamp.current);
      
      // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      queryClient.removeQueries({ queryKey: ['/api/listings'] });
      queryClient.invalidateQueries({ queryKey: ['/api/listings'] });
      queryClient.refetchQueries({ queryKey: ['/api/listings'] });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º timestamp
      lastTimestamp.current = timestampData.timestamp;
    }
  }, [timestampData, queryClient]);

  return {
    lastUpdate: timestampData?.timestamp || 0,
    isActive: true
  };
}