import { useState, useEffect } from 'react';
import { useQuery } from '@tanstack/react-query';
import { ChevronLeft, ChevronRight, Phone, MessageCircle, X } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { useLocation } from 'wouter';
import { ReferralModal } from './ReferralModal';
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";

interface AdvertisementItem {
  id: number;
  title: string;
  description: string;
  imageUrl: string;
  linkUrl: string;
  buttonText: string;
  isActive: boolean;
  order: number;
}

export function AdvertisementCarousel() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isPaused, setIsPaused] = useState(false);
  const [showReferralModal, setShowReferralModal] = useState(false);
  const [showSupportModal, setShowSupportModal] = useState(false);
  const [, setLocation] = useLocation();

  const { data: advertisements = [], isLoading } = useQuery<AdvertisementItem[]>({
    queryKey: ['/api/advertisement-carousel'],
    staleTime: 30 * 1000, // 30 —Å–µ–∫—É–Ω–¥ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    refetchInterval: 30 * 1000, // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    refetchOnWindowFocus: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
    refetchOnMount: true, // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  });

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É
  const activeAds = advertisements
    .filter(ad => ad.isActive)
    .sort((a, b) => a.order - b.order);

  // üö® –¢–ï–°–¢: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–æ–π
  console.log('üé† [–¢–ï–°–¢] –ó–∞–≥—Ä—É–∂–µ–Ω—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏:', advertisements);
  console.log('üéØ [–¢–ï–°–¢] –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:', activeAds);
  console.log('üìä [–¢–ï–°–¢] isLoading:', isLoading);
  console.log('üî¢ [–¢–ï–°–¢] currentSlide:', currentSlide);
  console.log('‚è∏Ô∏è [–¢–ï–°–¢] isPaused:', isPaused);
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  if (activeAds.length > 0) {
    console.log('üîó [–¢–ï–°–¢] URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å":', activeAds[0].imageUrl);
  }

  // üö® –¢–ï–°–¢: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const [imageLoadStates, setImageLoadStates] = useState<{ [key: string]: 'loading' | 'loaded' | 'error' }>({});

  // –ü—Ä–µ–ª–æ–∞–¥–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  useEffect(() => {
    console.log('üñºÔ∏è [–¢–ï–°–¢] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è', activeAds.length, '–æ–±—ä—è–≤–ª–µ–Ω–∏–π');
    
    activeAds.forEach((ad, index) => {
      if (ad.imageUrl) {
        console.log(`üîÑ [–¢–ï–°–¢] –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index}: ${ad.title} - ${ad.imageUrl}`);
        
        setImageLoadStates(prev => ({ ...prev, [ad.id]: 'loading' }));
        
        const img = new Image();
        img.onload = () => {
          console.log(`‚úÖ [–¢–ï–°–¢] –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${index}: ${ad.title}`);
          setImageLoadStates(prev => ({ ...prev, [ad.id]: 'loaded' }));
        };
        img.onerror = () => {
          console.log(`‚ùå [–¢–ï–°–¢] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${index}: ${ad.title} - ${ad.imageUrl}`);
          setImageLoadStates(prev => ({ ...prev, [ad.id]: 'error' }));
        };
        img.src = ad.imageUrl;
      }
    });
  }, [activeAds]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (activeAds.length <= 1 || isPaused) return;

    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % activeAds.length);
    }, 5000);

    return () => clearInterval(interval);
  }, [activeAds.length, isPaused]);

  // –†—É—á–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
  const goToSlide = (index: number) => {
    setCurrentSlide(index);
  };

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % activeAds.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + activeAds.length) % activeAds.length);
  };

  const handleSupportClick = () => {
    setShowSupportModal(true);
  };

  const handlePhoneCall = () => {
    window.location.href = 'tel:+992903331332';
    setShowSupportModal(false);
  };

  const handleWhatsApp = () => {
    window.open('https://wa.me/992903331332', '_blank');
    setShowSupportModal(false);
  };

  const handleClick = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
    if (currentAd?.title.includes('–¥—Ä—É–≥–∞') || currentAd?.title.includes('1000 –°–æ–º–æ–Ω–∏')) {
      setShowReferralModal(true);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    if (currentAd?.title.includes('–ø–æ–º–æ—â—å') || currentAd?.title.includes('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å–≤—è–∑–∏
      handleSupportClick();
      return;
    }
    
    if (currentAd?.linkUrl) {
      let url = currentAd.linkUrl.trim();
      
      // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ (tel:), –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Å–∏—Å—Ç–µ–º–µ
      if (url.startsWith('tel:')) {
        console.log('üìû –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏:', url);
        window.location.href = url;
        return;
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –≤–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http), –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
      if (url.startsWith('http')) {
        console.log('üîó –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏:', url);
        window.open(url, '_blank');
        return;
      }
      
      // –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ –¥–æ–±–∞–≤–ª—è–µ–º / –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (!url.startsWith('/')) {
        url = `/${url}`;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–æ—É—Ç
      const validRoutes = ['/', '/home', '/auctions', '/favorites', '/sell', '/bids', '/profile', '/notifications', '/my-alerts', '/user-data', '/my-sales', '/terms', '/privacy', '/login', '/admin', '/special-offers'];
      
      if (validRoutes.includes(url)) {
        console.log('üîó –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏:', url);
        setLocation(url);
      } else {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–æ—É—Ç –∫–∞—Ä—É—Å–µ–ª–∏:', url, '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
        setLocation('/');
      }
    }
  };



  if (isLoading) {
    return (
      <div className="h-44 rounded-2xl animate-pulse bg-gray-200 dark:bg-gray-700"></div>
    );
  }

  if (activeAds.length === 0) {
    return null;
  }

  const currentAd = activeAds[currentSlide];
  
  // üö® –¢–ï–°–¢: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
  console.log('üé≠ [–¢–ï–°–¢] –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—É—Å–µ–ª—å - currentAd:', currentAd);
  console.log('üéõÔ∏è [–¢–ï–°–¢] –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', imageLoadStates);
  
  if (currentAd) {
    const imageState = imageLoadStates[currentAd.id];
    console.log(`üñºÔ∏è [–¢–ï–°–¢] –¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ "${currentAd.title}" - —Å–æ—Å—Ç–æ—è–Ω–∏–µ:`, imageState);
    
    if (imageState === 'loading') {
      console.log('‚ö†Ô∏è [–¢–ï–°–¢] –ü–†–û–ë–õ–ï–ú–ê: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è! –≠—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Å–µ—Ä—É—é –∫–æ–ª–æ–Ω–∫—É');
    } else if (imageState === 'error') {
      console.log('üî• [–¢–ï–°–¢] –ü–†–û–ë–õ–ï–ú–ê: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è! –≠—Ç–æ —Ç–æ—á–Ω–æ –≤—ã–∑–æ–≤–µ—Ç —Å–µ—Ä—É—é –∫–æ–ª–æ–Ω–∫—É');
    } else if (imageState === 'loaded') {
      console.log('‚úÖ [–¢–ï–°–¢] –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùì [–¢–ï–°–¢] –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è! –ú–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Å–µ—Ä—É—é –∫–æ–ª–æ–Ω–∫—É');
    }
  }

  return (
    <div 
      className="relative h-44 rounded-2xl overflow-hidden cursor-pointer transition-all duration-300"
      onMouseEnter={() => setIsPaused(true)}
      onMouseLeave={() => setIsPaused(false)}
      onClick={handleClick}
    >
      {/* Overlay slide system */}
      <div className="relative h-full">
        {activeAds.map((ad, index) => (
          <div
            key={ad.id}
            className={`absolute inset-0 transition-all duration-500 ease-in-out ${
              index === currentSlide 
                ? 'translate-x-0 opacity-100' 
                : index < currentSlide 
                  ? '-translate-x-full opacity-0' 
                  : 'translate-x-full opacity-0'
            }`}
          >
            <div className="relative h-full p-6 text-white">
              {/* Background Image */}
              <div 
                className="absolute inset-0 rounded-2xl bg-cover bg-center bg-no-repeat"
                style={{
                  backgroundImage: `url('${ad.imageUrl}')`,
                }}
              />
              
              {/* Minimal dark overlay for text readability */}
              <div 
                className="absolute inset-0 rounded-2xl"
                style={{
                  background: 'linear-gradient(135deg, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.2) 100%)',
                }}
              />
              
              {/* Content */}
              <div className="relative z-10 h-full flex flex-col justify-center items-center text-center space-y-3">
                <h2 className="text-2xl font-bold drop-shadow-lg text-white text-center max-w-md leading-tight">
                  {ad.title} —Ç–µ—Å—Ç
                </h2>
                {ad.description && (
                  <p className="text-base leading-relaxed opacity-95 drop-shadow-md max-w-md text-white text-center">
                    {ad.description}
                  </p>
                )}
                {ad.linkUrl && (
                  <div className="mt-4">
                    <span className="px-4 py-2 rounded-full text-sm font-bold hover:opacity-90 transition-all duration-300 cursor-pointer inline-flex items-center gap-1 min-w-[180px] justify-center shadow-lg hover:shadow-xl transform hover:scale-105 bg-white text-blue-600">
                      {ad.buttonText}
                    </span>
                  </div>
                )}
              </div>
              
              {/* Decorative Elements */}
              <div className="absolute top-4 right-4 w-12 h-12 rounded-full bg-white/10 blur-xl"></div>
              <div className="absolute bottom-6 left-6 w-8 h-8 rounded-full bg-white/5 blur-lg"></div>
            </div>
          </div>
        ))}
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      {activeAds.length > 1 && (
        <>
          <Button
            variant="outline"
            size="icon"
            className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/20 hover:bg-white/30 border-white/30 text-white opacity-0 hover:opacity-100 transition-all duration-300"
            onClick={(e) => {
              e.stopPropagation();
              prevSlide();
            }}
          >
            <ChevronLeft className="h-4 w-4" />
          </Button>
          <Button
            variant="outline"
            size="icon"
            className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/20 hover:bg-white/30 border-white/30 text-white opacity-0 hover:opacity-100 transition-all duration-300"
            onClick={(e) => {
              e.stopPropagation();
              nextSlide();
            }}
          >
            <ChevronRight className="h-4 w-4" />
          </Button>
        </>
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–æ–≤ */}
      {activeAds.length > 1 && (
        <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
          {activeAds.map((_, index) => (
            <button
              key={index}
              className={`w-3 h-3 rounded-full transition-colors ${
                index === currentSlide 
                  ? 'bg-white' 
                  : 'bg-white/50 hover:bg-white/70'
              }`}
              onClick={(e) => {
                e.stopPropagation();
                goToSlide(index);
              }}
            />
          ))}
        </div>
      )}
      
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã */}
      <ReferralModal 
        isOpen={showReferralModal} 
        onClose={() => setShowReferralModal(false)} 
      />
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
      <AlertDialog open={showSupportModal} onOpenChange={(open) => {
        if (!open) {
          setShowSupportModal(false);
        }
      }}>
        <AlertDialogContent 
          className="sm:max-w-[425px]"
          onClick={(e) => e.stopPropagation()}
        >
          <AlertDialogHeader>
            <AlertDialogTitle className="text-center">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</AlertDialogTitle>
            <AlertDialogDescription className="text-center">
              –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter className="flex flex-col gap-2">
            <Button 
              onClick={handlePhoneCall}
              className="w-full bg-green-600 hover:bg-green-700 text-white"
            >
              <Phone className="mr-2 h-4 w-4" />
              –ü–æ–∑–≤–æ–Ω–∏—Ç—å
            </Button>
            <Button 
              onClick={handleWhatsApp}
              className="w-full bg-emerald-600 hover:bg-emerald-700 text-white"
            >
              <MessageCircle className="mr-2 h-4 w-4" />
              WhatsApp
            </Button>
            <Button 
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                setShowSupportModal(false);
              }}
              variant="outline"
              className="w-full"
            >
              <X className="mr-2 h-4 w-4" />
              –û—Ç–º–µ–Ω–∞
            </Button>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </div>
  );
}