import { useState, useEffect } from 'react';
import { useQuery } from '@tanstack/react-query';
import { ChevronLeft, ChevronRight, Phone, MessageCircle, X } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { useLocation } from 'wouter';
import { ReferralModal } from './ReferralModal';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫—ç—à —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const globalImageCache = new Map<string, 'loading' | 'loaded' | 'error'>();
const globalPreloadedImages = new Set<string>();
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";

interface AdvertisementItem {
  id: number;
  title: string;
  description: string;
  imageUrl: string;
  rotationImage1?: string;
  rotationImage2?: string;
  rotationImage3?: string;
  rotationImage4?: string;
  rotationInterval?: number;
  linkUrl: string;
  buttonText: string;
  isActive: boolean;
  order: number;
}

export function AdvertisementCarousel() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isPaused, setIsPaused] = useState(false);
  const [showReferralModal, setShowReferralModal] = useState(false);
  const [showSupportModal, setShowSupportModal] = useState(false);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [, setLocation] = useLocation();

  const { data: advertisements = [], isLoading } = useQuery<AdvertisementItem[]>({
    queryKey: ['/api/advertisement-carousel'],
    staleTime: 30 * 1000, // 30 —Å–µ–∫—É–Ω–¥ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    refetchInterval: 30 * 1000, // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    refetchOnWindowFocus: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
    refetchOnMount: true, // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  });

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É
  const activeAds = advertisements
    .filter(ad => ad.isActive)
    .sort((a, b) => a.order - b.order);

  const currentAd = activeAds[currentSlide];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏
  const getRotationImages = (ad: AdvertisementItem): string[] => {
    const images: string[] = [ad.imageUrl]; // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤–æ–µ
    
    if (ad.rotationImage1) images.push(ad.rotationImage1);
    if (ad.rotationImage2) images.push(ad.rotationImage2);
    if (ad.rotationImage3) images.push(ad.rotationImage3);
    if (ad.rotationImage4) images.push(ad.rotationImage4);
    
    return images;
  };

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const getCurrentImage = (): string => {
    if (!currentAd) return '';
    const images = getRotationImages(currentAd);
    return images[currentImageIndex % images.length] || currentAd.imageUrl;
  };

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—É—Å–µ–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('üé† –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏:', activeAds.length);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏
  if (activeAds.length > 0 && activeAds[0].imageUrl) {
    console.log('üîó –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏:', activeAds[0].imageUrl);
  }

  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—ç—à–∞
  const [, forceUpdate] = useState({});

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞
  const getImageLoadState = (imageUrl: string): 'loading' | 'loaded' | 'error' | 'none' => {
    return globalImageCache.get(imageUrl) || 'none';
  };

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  useEffect(() => {
    activeAds.forEach((ad) => {
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ä–æ—Ç–∞—Ü–∏–∏
      const allImages = getRotationImages(ad);
      
      allImages.forEach((imageUrl) => {
        if (imageUrl && !globalPreloadedImages.has(imageUrl)) {
          // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º–æ–µ
          globalPreloadedImages.add(imageUrl);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤ –∫—ç—à–µ
          if (!globalImageCache.has(imageUrl)) {
            globalImageCache.set(imageUrl, 'loading');
            
            const img = new Image();
            img.onload = () => {
              globalImageCache.set(imageUrl, 'loaded');
              forceUpdate({}); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            };
            img.onerror = () => {
              globalImageCache.set(imageUrl, 'error');
              forceUpdate({}); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            };
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫—ç—à-–∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º
            img.crossOrigin = 'anonymous';
            img.loading = 'eager'; // –ó–∞–≥—Ä—É–∂–∞—Ç—å —Å—Ä–∞–∑—É
            img.src = imageUrl;
          }
        }
      });
    });
  }, [activeAds]);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞—Ä–∞–Ω–µ–µ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    activeAds.forEach((ad) => {
      if (ad.imageUrl && getImageLoadState(ad.imageUrl) === 'none') {
        // –°–æ–∑–¥–∞–µ–º link —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
        const link = document.createElement('link');
        link.rel = 'preload';
        link.as = 'image';
        link.href = ad.imageUrl;
        document.head.appendChild(link);
        
        // –£–±–∏—Ä–∞–µ–º link —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          if (document.head.contains(link)) {
            document.head.removeChild(link);
          }
        }, 5000);
      }
    });
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (activeAds.length <= 1 || isPaused) return;

    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % activeAds.length);
    }, 5000);

    return () => clearInterval(interval);
  }, [activeAds.length, isPaused]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–∞–π–¥–∞
  useEffect(() => {
    if (!currentAd || isPaused) return;

    const images = getRotationImages(currentAd);
    if (images.length <= 1) return; // –ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏

    const interval = (currentAd.rotationInterval || 3) * 1000;
    const rotationInterval = setInterval(() => {
      setCurrentImageIndex((prev) => (prev + 1) % images.length);
    }, interval);

    return () => clearInterval(rotationInterval);
  }, [currentAd, isPaused]);

  // –°–±—Ä–æ—Å –∏–Ω–¥–µ–∫—Å–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–ª–∞–π–¥–∞
  useEffect(() => {
    setCurrentImageIndex(0);
  }, [currentSlide]);

  // –†—É—á–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
  const goToSlide = (index: number) => {
    setCurrentSlide(index);
  };

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % activeAds.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + activeAds.length) % activeAds.length);
  };

  const handleSupportClick = () => {
    setShowSupportModal(true);
  };

  const handlePhoneCall = () => {
    window.location.href = 'tel:+992903331332';
    setShowSupportModal(false);
  };

  const handleWhatsApp = () => {
    window.open('https://wa.me/992903331332', '_blank');
    setShowSupportModal(false);
  };

  const handleClick = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
    if (currentAd?.title.includes('–¥—Ä—É–≥–∞') || currentAd?.title.includes('1000 –°–æ–º–æ–Ω–∏')) {
      setShowReferralModal(true);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    if (currentAd?.title.includes('–ø–æ–º–æ—â—å') || currentAd?.title.includes('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å–≤—è–∑–∏
      handleSupportClick();
      return;
    }
    
    if (currentAd?.linkUrl) {
      let url = currentAd.linkUrl.trim();
      
      // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ (tel:), –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Å–∏—Å—Ç–µ–º–µ
      if (url.startsWith('tel:')) {
        console.log('üìû –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏:', url);
        window.location.href = url;
        return;
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –≤–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http), –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
      if (url.startsWith('http')) {
        console.log('üîó –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏:', url);
        window.open(url, '_blank');
        return;
      }
      
      // –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ –¥–æ–±–∞–≤–ª—è–µ–º / –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (!url.startsWith('/')) {
        url = `/${url}`;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–æ—É—Ç
      const validRoutes = ['/', '/home', '/auctions', '/favorites', '/sell', '/bids', '/profile', '/notifications', '/my-alerts', '/user-data', '/my-sales', '/terms', '/privacy', '/login', '/admin', '/special-offers'];
      
      if (validRoutes.includes(url)) {
        console.log('üîó –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏:', url);
        setLocation(url);
      } else {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–æ—É—Ç –∫–∞—Ä—É—Å–µ–ª–∏:', url, '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
        setLocation('/');
      }
    }
  };



  if (isLoading) {
    return (
      <div className="h-44 rounded-2xl animate-pulse bg-gray-200 dark:bg-gray-700"></div>
    );
  }

  if (activeAds.length === 0) {
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (currentAd) {
    const imageState = getImageLoadState(currentAd.imageUrl);
    if (imageState === 'error') {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏:', currentAd.imageUrl);
    }
  }

  return (
    <div 
      className="relative h-44 rounded-2xl overflow-hidden cursor-pointer transition-all duration-300"
      onMouseEnter={() => setIsPaused(true)}
      onMouseLeave={() => setIsPaused(false)}
      onClick={handleClick}
    >
      {/* Overlay slide system */}
      <div className="relative h-full">
        {activeAds.map((ad, index) => (
          <div
            key={ad.id}
            className={`absolute inset-0 transition-all duration-500 ease-in-out ${
              index === currentSlide 
                ? 'translate-x-0 opacity-100' 
                : index < currentSlide 
                  ? '-translate-x-full opacity-0' 
                  : 'translate-x-full opacity-0'
            }`}
          >
            <div className="relative h-full p-6 text-white">
              {/* Background Image with Loading State - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ */}
              <div 
                className={`absolute inset-0 rounded-2xl bg-cover bg-center bg-no-repeat transition-opacity duration-200 ${
                  getImageLoadState(getCurrentImage()) === 'loaded' 
                    ? 'opacity-100' 
                    : getImageLoadState(getCurrentImage()) === 'error'
                    ? 'bg-gradient-to-br from-blue-500 via-purple-500 to-indigo-600 opacity-100'
                    : 'bg-gradient-to-br from-blue-400 via-purple-400 to-indigo-500 opacity-60'
                }`}
                style={{
                  backgroundImage: getImageLoadState(getCurrentImage()) === 'loaded' ? `url('${getCurrentImage()}')` : undefined,
                }}
              />
              
              {/* Loading Indicator */}
              {getImageLoadState(ad.imageUrl) === 'loading' && (
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="w-6 h-6 border-2 border-white border-t-transparent rounded-full animate-spin opacity-75"></div>
                </div>
              )}
              
              {/* Minimal dark overlay for text readability */}
              <div 
                className="absolute inset-0 rounded-2xl"
                style={{
                  background: 'linear-gradient(135deg, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.2) 100%)',
                }}
              />
              
              {/* Content */}
              <div className="relative z-10 h-full flex flex-col justify-center items-center text-center space-y-3">
                <h2 className="text-2xl font-bold drop-shadow-lg text-white text-center max-w-md leading-tight">
                  {ad.title}
                </h2>
                {ad.description && (
                  <p className="text-base leading-relaxed opacity-95 drop-shadow-md max-w-md text-white text-center">
                    {ad.description}
                  </p>
                )}
                {ad.linkUrl && (
                  <div className="mt-4">
                    <span className="px-4 py-2 rounded-full text-sm font-bold hover:opacity-90 transition-all duration-300 cursor-pointer inline-flex items-center gap-1 min-w-[180px] justify-center shadow-lg hover:shadow-xl transform hover:scale-105 bg-white text-blue-600">
                      {ad.buttonText}
                    </span>
                  </div>
                )}
              </div>
              
              {/* Decorative Elements */}
              <div className="absolute top-4 right-4 w-12 h-12 rounded-full bg-white/10 blur-xl"></div>
              <div className="absolute bottom-6 left-6 w-8 h-8 rounded-full bg-white/5 blur-lg"></div>
            </div>
          </div>
        ))}
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      {activeAds.length > 1 && (
        <>
          <Button
            variant="outline"
            size="icon"
            className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/20 hover:bg-white/30 border-white/30 text-white opacity-0 hover:opacity-100 transition-all duration-300"
            onClick={(e) => {
              e.stopPropagation();
              prevSlide();
            }}
          >
            <ChevronLeft className="h-4 w-4" />
          </Button>
          <Button
            variant="outline"
            size="icon"
            className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/20 hover:bg-white/30 border-white/30 text-white opacity-0 hover:opacity-100 transition-all duration-300"
            onClick={(e) => {
              e.stopPropagation();
              nextSlide();
            }}
          >
            <ChevronRight className="h-4 w-4" />
          </Button>
        </>
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–æ–≤ */}
      {activeAds.length > 1 && (
        <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
          {activeAds.map((_, index) => (
            <button
              key={index}
              className={`w-3 h-3 rounded-full transition-colors ${
                index === currentSlide 
                  ? 'bg-white' 
                  : 'bg-white/50 hover:bg-white/70'
              }`}
              onClick={(e) => {
                e.stopPropagation();
                goToSlide(index);
              }}
            />
          ))}
        </div>
      )}
      
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã */}
      <ReferralModal 
        isOpen={showReferralModal} 
        onClose={() => setShowReferralModal(false)} 
      />
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
      <AlertDialog open={showSupportModal} onOpenChange={(open) => {
        if (!open) {
          setShowSupportModal(false);
        }
      }}>
        <AlertDialogContent 
          className="sm:max-w-[425px]"
          onClick={(e) => e.stopPropagation()}
        >
          <AlertDialogHeader>
            <AlertDialogTitle className="text-center">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</AlertDialogTitle>
            <AlertDialogDescription className="text-center">
              –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter className="flex flex-col gap-2">
            <Button 
              onClick={handlePhoneCall}
              className="w-full bg-green-600 hover:bg-green-700 text-white"
            >
              <Phone className="mr-2 h-4 w-4" />
              –ü–æ–∑–≤–æ–Ω–∏—Ç—å
            </Button>
            <Button 
              onClick={handleWhatsApp}
              className="w-full bg-emerald-600 hover:bg-emerald-700 text-white"
            >
              <MessageCircle className="mr-2 h-4 w-4" />
              WhatsApp
            </Button>
            <Button 
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                setShowSupportModal(false);
              }}
              variant="outline"
              className="w-full"
            >
              <X className="mr-2 h-4 w-4" />
              –û—Ç–º–µ–Ω–∞
            </Button>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </div>
  );
}