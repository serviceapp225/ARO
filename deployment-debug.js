#!/usr/bin/env node

import fs from 'fs';
import path from 'path';

console.log('üîç DEPLOYMENT DEBUG –¥–ª—è Replit');

// –°–æ–∑–¥–∞–µ–º debug –≤–µ—Ä—Å–∏—é —Å–µ—Ä–≤–µ—Ä–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏
const serverCode = `
process.on('uncaughtException', (err) => {
  console.error('‚ùå UNCAUGHT EXCEPTION:', err);
  console.error('Stack:', err.stack);
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ùå UNHANDLED REJECTION:', reason);
  console.error('Promise:', promise);
  process.exit(1);
});

console.log('üöÄ –ù–ê–ß–ê–õ–û DEPLOYMENT –°–ï–†–í–ï–†–ê');
console.log('Node –≤–µ—Ä—Å–∏—è:', process.version);
console.log('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', process.platform);
console.log('–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', process.cwd());
console.log('PORT –∏–∑ env:', process.env.PORT);
console.log('NODE_ENV:', process.env.NODE_ENV);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
const checkFiles = () => {
  const files = ['autoauction.db', 'public/index.html', '.env'];
  files.forEach(file => {
    if (fs.existsSync(file)) {
      console.log('‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω:', file);
    } else {
      console.log('‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', file);
    }
  });
};

checkFiles();

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
console.log('üì• –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...');
`;

// –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π index.js
const originalServer = fs.readFileSync('dist/index.js', 'utf8');

// –°–æ–∑–¥–∞–µ–º debug –≤–µ—Ä—Å–∏—é
const debugServer = serverCode + originalServer;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º debug –≤–µ—Ä—Å–∏—é
fs.writeFileSync('dist/index-debug.js', debugServer);

// –û–±–Ω–æ–≤–ª—è–µ–º package.json –¥–ª—è debug
const pkg = JSON.parse(fs.readFileSync('dist/package.json', 'utf8'));
pkg.scripts.start = 'node index-debug.js';
fs.writeFileSync('dist/package.json', JSON.stringify(pkg, null, 2));

console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ debug –≤–µ—Ä—Å–∏—è —Å–µ—Ä–≤–µ—Ä–∞');
console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω package.json');
console.log('');
console.log('üéØ –ò–ù–°–¢–†–£–ö–¶–ò–ò:');
console.log('1. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ deployment –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏');
console.log('2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É Deploy –≤ Replit');
console.log('3. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –æ—à–∏–±–∫–∏, –æ–Ω–∏ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –≤ –ª–æ–≥–∞—Ö deployment');
console.log('4. –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –ª–æ–≥–∏, –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –æ—à–∏–±–∫–∏');
console.log('');
console.log('üìã –¢–µ–ø–µ—Ä—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ deployment —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏!');