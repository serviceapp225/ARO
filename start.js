#!/usr/bin/env node

// Production entry point for Replit deployment
const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–∞—É–∫—Ü–∏–æ–Ω–∞...');

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
process.env.NODE_ENV = 'production';
process.env.PORT = process.env.PORT || '5000';

async function startApp() {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
    if (!fs.existsSync('./dist/index.js')) {
      console.log('–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–±–æ—Ä–∫–∏...');
      execSync('npm run build', { stdio: 'inherit' });
    }
    
    console.log('–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...');
    
    // –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫
    require('./dist/index.js');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
    
    // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ –±–µ–∑ —Å–±–æ—Ä–∫–∏
    console.log('–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...');
    execSync('npm run dev', { stdio: 'inherit' });
  }
}

startApp();