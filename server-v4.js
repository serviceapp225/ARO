const express = require('express');
const app = express();
const port = 3000;

// ะะพะฑะฐะฒะปัะตะผ ะฟะฐััะธะฝะณ JSON ะดะปั POST ะทะฐะฟัะพัะพะฒ ะพั Replit
app.use(express.json());

// CORS ะดะปั ะฟัะธะตะผะฐ ะทะฐะฟัะพัะพะฒ ะพั Replit
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
  if (req.method === 'OPTIONS') {
    res.sendStatus(200);
  } else {
    next();
  }
});

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({ 
    status: 'VPS SMS Proxy v4 ัะฐะฑะพัะฐะตั', 
    time: new Date().toISOString(),
    server: 'DigitalOcean 188.166.61.86',
    method: 'GET ะดะปั OSON SMS API v1'
  });
});

// SMS ะพัะฟัะฐะฒะบะฐ ัะตัะตะท OSON SMS API v1 (GET ะผะตัะพะด)
app.post('/api/send-sms', async (req, res) => {
  console.log('๐ VPS v4: ะะพะปััะตะฝ ะทะฐะฟัะพั ะฝะฐ ะพัะฟัะฐะฒะบั SMS');
  console.log('๐ ะะฐะฝะฝัะต ะทะฐะฟัะพัะฐ:', req.body);

  const { login, hash, sender, to, text } = req.body;
  
  // ะัะพะฒะตัะบะฐ ะพะฑัะทะฐัะตะปัะฝัั ะฟะฐัะฐะผะตััะพะฒ
  if (!login || !hash || !sender || !to || !text) {
    console.error('โ ะััััััะฒััั ะฟะฐัะฐะผะตััั:', { login: !!login, hash: !!hash, sender: !!sender, to: !!to, text: !!text });
    return res.status(400).json({
      success: false,
      message: 'ะััััััะฒััั ะพะฑัะทะฐัะตะปัะฝัะต ะฟะฐัะฐะผะตััั: login, hash, sender, to, text'
    });
  }

  // ะัะธััะบะฐ ะฝะพะผะตัะฐ ัะตะปะตัะพะฝะฐ (ัะฑะธัะฐะตะผ +992 ะธ ะพััะฐะฒะปัะตะผ ัะพะปัะบะพ ัะธััั)
  const cleanPhone = to.replace(/^\+?992/, '').replace(/[^0-9]/g, '');
  console.log(`๐ฑ ะัะธัะตะฝะฝัะน ะฝะพะผะตั: ${to} โ ${cleanPhone}`);

  try {
    const txn_id = `autobid_${Date.now()}`;
    
    // ะกะพะทะดะฐะตะผ GET URL ะดะปั OSON SMS API v1 ะฟะพ ะพะฑัะฐะทัั ัะฐะฑะพัะตะณะพ URL
    const apiUrl = new URL('https://api.osonsms.com/sendsms_v1.php');
    apiUrl.searchParams.append('from', sender);
    apiUrl.searchParams.append('phone_number', cleanPhone);
    apiUrl.searchParams.append('msg', encodeURIComponent(text));
    apiUrl.searchParams.append('str_hash', hash);
    apiUrl.searchParams.append('txn_id', txn_id);
    apiUrl.searchParams.append('login', login);

    console.log(`๐ GET URL:`, apiUrl.toString());

    // GET ะทะฐะฟัะพั ะบ OSON SMS API v1
    const fetch = (await import('node-fetch')).default;
    const response = await fetch(apiUrl.toString(), {
      method: 'GET',
      headers: {
        'User-Agent': 'AUTOBID.TJ VPS Proxy v4'
      }
    });

    const responseText = await response.text();
    console.log(`๐ก OSON SMS ะพัะฒะตั (${response.status}):`, responseText);

    if (response.ok) {
      // ะัะพะฒะตััะตะผ, ัะพะดะตัะถะธั ะปะธ ะพัะฒะตั ะพัะธะฑะบั
      try {
        const jsonResponse = JSON.parse(responseText);
        if (jsonResponse.error) {
          console.error('โ OSON SMS API ะฒะตัะฝัะป ะพัะธะฑะบั:', jsonResponse.error);
          return res.status(422).json({
            success: false,
            message: `OSON SMS API ะพัะธะฑะบะฐ: ${jsonResponse.error.msg}`,
            osonsms_response: responseText
          });
        }
      } catch (e) {
        // ะัะปะธ ะพัะฒะตั ะฝะต JSON, ะฒะพะทะผะพะถะฝะพ ััะพ ััะฟะตัะฝะฐั ะพัะฟัะฐะฒะบะฐ
        console.log('โ ะัะฒะตั ะฝะต JSON, ะฒะพะทะผะพะถะฝะพ ััะฟะตัะฝะฐั ะพัะฟัะฐะฒะบะฐ');
      }

      console.log('โ SMS ะพัะฟัะฐะฒะปะตะฝ ััะฟะตัะฝะพ');
      res.json({
        success: true,
        message: 'SMS ะพัะฟัะฐะฒะปะตะฝ ััะฟะตัะฝะพ',
        osonsms_response: responseText
      });
    } else {
      console.error(`โ HTTP ะพัะธะฑะบะฐ OSON SMS API: ${response.status}`);
      res.status(response.status).json({
        success: false,
        message: `HTTP ะพัะธะฑะบะฐ OSON SMS API: ${response.status}`,
        osonsms_response: responseText
      });
    }

  } catch (error) {
    console.error('โ ะัะธะฑะบะฐ ะฟัะธ ะพัะฟัะฐะฒะบะต SMS:', error);
    res.status(500).json({
      success: false,
      message: 'ะะฝัััะตะฝะฝัั ะพัะธะฑะบะฐ ัะตัะฒะตัะฐ ะฟัะธ ะพัะฟัะฐะฒะบะต SMS',
      error: error.message
    });
  }
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(port, '0.0.0.0', () => {
  console.log('๐ VPS SMS Proxy v4 ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั 3000');
  console.log('๐ก ะะตัะพะด: GET ะทะฐะฟัะพัั ะบ OSON SMS API v1');
  console.log('๐ ะะฑัะฐะทะตั ัะฐะฑะพัะตะณะพ URL ะธัะฟะพะปัะทะพะฒะฐะฝ ะดะปั ัะพัะผะฐัะธัะพะฒะฐะฝะธั');
  console.log(`โฐ ะัะตะผั ะทะฐะฟััะบะฐ: ${new Date().toISOString()}`);
});