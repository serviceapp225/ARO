#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

try {
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º development –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  if (fs.existsSync('.replit.dev.backup')) {
    fs.copyFileSync('.replit.dev.backup', '.replit');
    console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ development –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è');
    console.log('üîß –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ development —Ä–µ–∂–∏–º–µ');
    console.log('');
    console.log('üìã Development —Ä–µ–∂–∏–º:');
    console.log('   - –ü–æ—Ä—Ç 5000 –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    console.log('   - –í—Å–µ 3 –ø–æ—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω—ã');
    console.log('   - Hot reload –≤–∫–ª—é—á–µ–Ω');
  } else {
    console.log('‚ùå –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .replit.dev.backup –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    console.log('üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .replit.dev.backup —Å development –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π');
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
}