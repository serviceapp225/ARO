#!/usr/bin/env node

// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç production —Å–±–æ—Ä–∫–∏ –¥–ª—è DigitalOcean
import { spawn } from 'child_process';
import http from 'http';

console.log('üß™ –¢–µ—Å—Ç production —Å–±–æ—Ä–∫–∏ –¥–ª—è DigitalOcean...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
import fs from 'fs';
import path from 'path';

const requiredFiles = [
  'dist/production.js',
  'dist/public/index.html',
  'dist/public/assets',
  'Dockerfile',
  '.do/app.yaml',
  'server/production.ts'
];

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:');
let allFilesExist = true;

for (const file of requiredFiles) {
  const exists = fs.existsSync(file);
  console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
  if (!exists) allFilesExist = false;
}

if (!allFilesExist) {
  console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
console.log('\nüìä –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:');
try {
  const prodJs = fs.statSync('dist/production.js');
  const indexHtml = fs.statSync('dist/public/index.html');
  
  console.log(`üì¶ production.js: ${(prodJs.size / 1024).toFixed(1)} KB`);
  console.log(`üìÑ index.html: ${indexHtml.size} bytes`);
  
  const assetsDir = fs.readdirSync('dist/public/assets');
  console.log(`üé® assets —Ñ–∞–π–ª–æ–≤: ${assetsDir.length}`);
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤:', error.message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ index.html
console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ index.html:');
try {
  const indexContent = fs.readFileSync('dist/public/index.html', 'utf8');
  
  const hasAssets = indexContent.includes('./assets/');
  const hasRoot = indexContent.includes('<div id="root">');
  
  console.log(`${hasAssets ? '‚úÖ' : '‚ùå'} –°—Å—ã–ª–∫–∏ –Ω–∞ assets`);
  console.log(`${hasRoot ? '‚úÖ' : '‚ùå'} Root div —ç–ª–µ–º–µ–Ω—Ç`);
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ index.html:', error.message);
}

console.log('\nüöÄ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
console.log('\nüìã –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é –≤ DigitalOcean:');
console.log('‚úÖ Dockerfile —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏');
console.log('‚úÖ server/production.ts –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Å–µ—Ä–≤–µ—Ä');
console.log('‚úÖ .do/app.yaml –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è');
console.log('‚úÖ dist/production.js —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä');
console.log('‚úÖ dist/public/ frontend assets');
console.log('\nüéØ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: node dist/production.js');