import { db } from './db.js';
import { banners, advertisementCarousel, sellCarBanner } from '../shared/schema.js';
import { ImageDownloadService } from './imageDownloadService.js';
import { eq } from 'drizzle-orm';

export class ImageUpdateService {
  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ banners
   */
  static async updateBannersImages(): Promise<void> {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–æ–≤...');
    
    try {
      const bannersData = await db.select().from(banners);
      
      for (const banner of bannersData) {
        if (!banner.imageData && banner.imageUrl && ImageDownloadService.isExternalImageUrl(banner.imageUrl)) {
          console.log(`üì• –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ ID ${banner.id}: ${banner.imageUrl}`);
          
          try {
            const imageResult = await ImageDownloadService.downloadAndCompressImage(banner.imageUrl);
            
            await db.update(banners)
              .set({
                imageData: imageResult.data,
                imageType: imageResult.type
              })
              .where(eq(banners.id, banner.id));
            
            console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ ID ${banner.id}`);
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ ID ${banner.id}:`, error.message);
          }
        }
      }
      
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–æ–≤:', error);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ –∫–∞—Ä—É—Å–µ–ª–∏ —Ä–µ–∫–ª–∞–º—ã
   */
  static async updateAdvertisementCarouselImages(): Promise<void> {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞—Ä—É—Å–µ–ª–∏ —Ä–µ–∫–ª–∞–º—ã...');
    
    try {
      const carouselData = await db.select().from(advertisementCarousel);
      
      for (const item of carouselData) {
        const updates: any = {};
        
        // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if (!item.imageData && item.imageUrl && ImageDownloadService.isExternalImageUrl(item.imageUrl)) {
          console.log(`üì• –°–∫–∞—á–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ ID ${item.id}: ${item.imageUrl}`);
          
          try {
            const imageResult = await ImageDownloadService.downloadAndCompressImage(item.imageUrl);
            updates.imageData = imageResult.data;
            updates.imageType = imageResult.type;
            console.log(`‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ ID ${item.id}`);
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ ID ${item.id}:`, error.message);
          }
        }

        // –†–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const rotationImages = [
          { url: item.rotationImage1, dataField: 'rotationImage1Data', typeField: 'rotationImage1Type', index: 1 },
          { url: item.rotationImage2, dataField: 'rotationImage2Data', typeField: 'rotationImage2Type', index: 2 },
          { url: item.rotationImage3, dataField: 'rotationImage3Data', typeField: 'rotationImage3Type', index: 3 },
          { url: item.rotationImage4, dataField: 'rotationImage4Data', typeField: 'rotationImage4Type', index: 4 }
        ];

        for (const rotImg of rotationImages) {
          const currentData = item[rotImg.dataField as keyof typeof item] as string;
          
          if (!currentData && rotImg.url && ImageDownloadService.isExternalImageUrl(rotImg.url)) {
            console.log(`üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${rotImg.index} –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ ID ${item.id}: ${rotImg.url}`);
            
            try {
              const imageResult = await ImageDownloadService.downloadAndCompressImage(rotImg.url);
              updates[rotImg.dataField] = imageResult.data;
              updates[rotImg.typeField] = imageResult.type;
              console.log(`‚úÖ –†–æ—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${rotImg.index} –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ ID ${item.id}`);
            } catch (error) {
              console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${rotImg.index} –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ ID ${item.id}:`, error.message);
            }
          }
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        if (Object.keys(updates).length > 0) {
          await db.update(advertisementCarousel)
            .set(updates)
            .where(eq(advertisementCarousel.id, item.id));
        }
      }
      
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞—Ä—É—Å–µ–ª–∏ —Ä–µ–∫–ª–∞–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞—Ä—É—Å–µ–ª–∏ —Ä–µ–∫–ª–∞–º—ã:', error);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ
   */
  static async updateSellCarBannerImages(): Promise<void> {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ...');
    
    try {
      const sellCarData = await db.select().from(sellCarBanner);
      
      for (const item of sellCarData) {
        const updates: any = {};
        
        // –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if (!item.backgroundImageData && item.backgroundImageUrl && ImageDownloadService.isExternalImageUrl(item.backgroundImageUrl)) {
          console.log(`üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ID ${item.id}: ${item.backgroundImageUrl}`);
          
          try {
            const imageResult = await ImageDownloadService.downloadAndCompressImage(item.backgroundImageUrl);
            updates.backgroundImageData = imageResult.data;
            updates.backgroundImageType = imageResult.type;
            console.log(`‚úÖ –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ID ${item.id}`);
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ID ${item.id}:`, error.message);
          }
        }

        // –†–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const rotationImages = [
          { url: item.rotationImage1, dataField: 'rotationImage1Data', typeField: 'rotationImage1Type', index: 1 },
          { url: item.rotationImage2, dataField: 'rotationImage2Data', typeField: 'rotationImage2Type', index: 2 },
          { url: item.rotationImage3, dataField: 'rotationImage3Data', typeField: 'rotationImage3Type', index: 3 },
          { url: item.rotationImage4, dataField: 'rotationImage4Data', typeField: 'rotationImage4Type', index: 4 }
        ];

        for (const rotImg of rotationImages) {
          const currentData = item[rotImg.dataField as keyof typeof item] as string;
          
          if (!currentData && rotImg.url && ImageDownloadService.isExternalImageUrl(rotImg.url)) {
            console.log(`üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${rotImg.index} –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ID ${item.id}: ${rotImg.url}`);
            
            try {
              const imageResult = await ImageDownloadService.downloadAndCompressImage(rotImg.url);
              updates[rotImg.dataField] = imageResult.data;
              updates[rotImg.typeField] = imageResult.type;
              console.log(`‚úÖ –†–æ—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${rotImg.index} –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ID ${item.id}`);
            } catch (error) {
              console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${rotImg.index} –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ID ${item.id}:`, error.message);
            }
          }
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        if (Object.keys(updates).length > 0) {
          await db.update(sellCarBanner)
            .set(updates)
            .where(eq(sellCarBanner.id, item.id));
        }
      }
      
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ:', error);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
   */
  static async updateAllImages(): Promise<void> {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    await this.updateBannersImages();
    await this.updateAdvertisementCarouselImages();
    await this.updateSellCarBannerImages();
    
    console.log('üéâ –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
   */
  static async initializeOnStartup(): Promise<void> {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    // –ó–∞–ø—É—Å–∫ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –¥–∞—Ç—å —Å–µ—Ä–≤–µ—Ä—É –≤—Ä–µ–º—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    setTimeout(async () => {
      try {
        await this.updateAllImages();
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
      }
    }, 5000); // 5 —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏
  }
}