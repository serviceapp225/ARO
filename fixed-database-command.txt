# –ö–û–ú–ê–ù–î–ê –î–õ–Ø –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø VPS 188.166.61.86

# –í—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø–æ—Ä—è–¥–∫—É –Ω–∞ VPS:

# 1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Å–µ—Ä–≤–∏—Å
sudo systemctl stop autobid-3001.service 2>/dev/null || true
sudo systemctl stop autobid-full 2>/dev/null || true

# 2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç
sudo systemctl start postgresql
sudo systemctl enable postgresql

# 3. –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î
sudo -u postgres psql -d autobid_db << 'DBEOF'
-- –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    phone VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    profile_photo TEXT,
    role VARCHAR(20) DEFAULT 'buyer' CHECK (role IN ('buyer', 'seller', 'admin')),
    is_active BOOLEAN DEFAULT false,
    verification_code VARCHAR(6),
    verification_expires_at TIMESTAMP,
    last_login TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS car_listings (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    brand VARCHAR(100) NOT NULL,
    model VARCHAR(100) NOT NULL,
    year INTEGER NOT NULL,
    fuel_type VARCHAR(50) NOT NULL,
    transmission VARCHAR(50) NOT NULL,
    mileage INTEGER,
    engine_volume DECIMAL(3,1),
    color VARCHAR(50),
    body_type VARCHAR(50),
    drive_type VARCHAR(50),
    condition VARCHAR(50),
    description TEXT,
    images TEXT[],
    starting_price DECIMAL(12,2) NOT NULL,
    current_price DECIMAL(12,2) DEFAULT 0,
    reserve_price DECIMAL(12,2),
    buy_now_price DECIMAL(12,2),
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'active', 'ended', 'sold', 'rejected')),
    auction_start TIMESTAMP,
    auction_end TIMESTAMP,
    location VARCHAR(100),
    vin VARCHAR(17),
    license_plate VARCHAR(20),
    technical_passport TEXT,
    is_damaged BOOLEAN DEFAULT false,
    damage_description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS bids (
    id SERIAL PRIMARY KEY,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    amount DECIMAL(12,2) NOT NULL,
    is_auto_bid BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(listing_id, user_id, amount)
);

CREATE TABLE IF NOT EXISTS favorites (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, listing_id)
);

CREATE TABLE IF NOT EXISTS notifications (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    type VARCHAR(50) DEFAULT 'info',
    is_read BOOLEAN DEFAULT false,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS banners (
    id SERIAL PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    image_url TEXT,
    link_url TEXT,
    is_active BOOLEAN DEFAULT true,
    display_order INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO users (phone, email, first_name, last_name, role, is_active) 
VALUES 
    ('+992901234567', 'admin@autoauction.tj', '–ê–¥–º–∏–Ω', '–°–∏—Å—Ç–µ–º–Ω—ã–π', 'admin', true),
    ('+992911234567', 'seller@autoauction.tj', '–ü—Ä–æ–¥–∞–≤–µ—Ü', '–¢–µ—Å—Ç–æ–≤—ã–π', 'seller', true),
    ('+992921234567', 'buyer@autoauction.tj', '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å', '–¢–µ—Å—Ç–æ–≤—ã–π', 'buyer', true)
ON CONFLICT (phone) DO NOTHING;

INSERT INTO banners (title, description, image_url, is_active, display_order)
VALUES ('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AutoBid.TJ', '–õ—É—á—à–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ–∞—É–∫—Ü–∏–æ–Ω–æ–≤ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–∞', '/assets/banner1.jpg', true, 1)
ON CONFLICT DO NOTHING;

-- –ü—Ä–æ–≤–µ—Ä–∫–∞
SELECT '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞' as status;
DBEOF

# 4. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
sudo tee /var/www/autobid/server.js > /dev/null << 'SERVEREOF'
const express = require('express');
const path = require('path');
const app = express();
const PORT = 3001;

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use('/assets', express.static('/var/www/autobid/dist/public/assets'));
app.use(express.static('/var/www/autobid/dist/public'));

// Health endpoint
app.get('/api/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    service: 'AutoBid.TJ',
    database: 'Connected' 
  });
});

// SPA fallback
app.get('*', (req, res) => {
  res.sendFile('/var/www/autobid/dist/public/index.html');
});

app.listen(PORT, '0.0.0.0', () => {
  console.log(`AutoBid.TJ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
SERVEREOF

# 5. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π systemd —Å–µ—Ä–≤–∏—Å
sudo tee /etc/systemd/system/autobid.service > /dev/null << 'SERVICEEOF'
[Unit]
Description=AutoBid.TJ Application
After=network.target postgresql.service

[Service]
Type=simple
User=www-data
WorkingDirectory=/var/www/autobid
Environment=NODE_ENV=production
Environment=PORT=3001
ExecStart=/usr/bin/node server.js
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal
SyslogIdentifier=autobid

[Install]
WantedBy=multi-user.target
SERVICEEOF

# 6. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å
sudo chown -R www-data:www-data /var/www/autobid
sudo systemctl daemon-reload
sudo systemctl enable autobid
sudo systemctl start autobid

# 7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
sleep 3
sudo systemctl status autobid --no-pager
netstat -tlnp | grep :3001

# 8. –¢–µ—Å—Ç API
curl -v http://localhost:3001/api/health

# 9. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å nginx
sudo nginx -t && sudo systemctl reload nginx

echo "‚úÖ –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
echo "üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å: http://188.166.61.86/api/health"