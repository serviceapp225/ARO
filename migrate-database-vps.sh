#!/bin/bash

# AutoBid.TJ - –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ VPS
# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è production

echo "üóÑÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö AutoBid.TJ..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
sudo -u postgres psql -d autobid_db -c "SELECT version();" || {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo -u postgres psql -d autobid_db << 'EOF'

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    phone VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    profile_photo TEXT,
    role VARCHAR(20) DEFAULT 'buyer' CHECK (role IN ('buyer', 'seller', 'admin')),
    is_active BOOLEAN DEFAULT false,
    verification_code VARCHAR(6),
    verification_expires_at TIMESTAMP,
    last_login TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
CREATE TABLE IF NOT EXISTS car_listings (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    brand VARCHAR(100) NOT NULL,
    model VARCHAR(100) NOT NULL,
    year INTEGER NOT NULL,
    fuel_type VARCHAR(50) NOT NULL,
    transmission VARCHAR(50) NOT NULL,
    mileage INTEGER,
    engine_volume DECIMAL(3,1),
    color VARCHAR(50),
    body_type VARCHAR(50),
    drive_type VARCHAR(50),
    condition VARCHAR(50),
    description TEXT,
    images TEXT[], -- JSON –º–∞—Å—Å–∏–≤ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    starting_price DECIMAL(12,2) NOT NULL,
    current_price DECIMAL(12,2) DEFAULT 0,
    reserve_price DECIMAL(12,2),
    buy_now_price DECIMAL(12,2),
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'active', 'ended', 'sold', 'rejected')),
    auction_start TIMESTAMP,
    auction_end TIMESTAMP,
    location VARCHAR(100),
    vin VARCHAR(17),
    license_plate VARCHAR(20),
    technical_passport TEXT,
    is_damaged BOOLEAN DEFAULT false,
    damage_description TEXT,
    electric_range INTEGER, -- –¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–µ–π –≤ –∫–º
    battery_capacity INTEGER, -- –¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–µ–π –≤ kWh
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞–≤–æ–∫
CREATE TABLE IF NOT EXISTS bids (
    id SERIAL PRIMARY KEY,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    amount DECIMAL(12,2) NOT NULL,
    is_auto_bid BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(listing_id, user_id, amount) -- –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞–≤–æ–∫
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
CREATE TABLE IF NOT EXISTS favorites (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, listing_id)
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
CREATE TABLE IF NOT EXISTS notifications (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    type VARCHAR(50) DEFAULT 'info' CHECK (type IN ('info', 'success', 'warning', 'error', 'bid', 'auction')),
    is_read BOOLEAN DEFAULT false,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
CREATE TABLE IF NOT EXISTS car_alerts (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    brand VARCHAR(100),
    model VARCHAR(100),
    year_from INTEGER,
    year_to INTEGER,
    price_from DECIMAL(12,2),
    price_to DECIMAL(12,2),
    fuel_type VARCHAR(50),
    transmission VARCHAR(50),
    body_type VARCHAR(50),
    location VARCHAR(100),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –±–∞–Ω–Ω–µ—Ä–æ–≤
CREATE TABLE IF NOT EXISTS banners (
    id SERIAL PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    image_url TEXT,
    link_url TEXT,
    is_active BOOLEAN DEFAULT true,
    display_order INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–æ–±—â–µ–Ω–∏–π
CREATE TABLE IF NOT EXISTS messages (
    id SERIAL PRIMARY KEY,
    sender_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    recipient_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE CASCADE,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç–∞–≤–æ–∫
CREATE TABLE IF NOT EXISTS auto_bids (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    listing_id INTEGER REFERENCES car_listings(id) ON DELETE CASCADE,
    max_amount DECIMAL(12,2) NOT NULL,
    increment DECIMAL(12,2) DEFAULT 100.00,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, listing_id)
);

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_users_phone ON users(phone);
CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
CREATE INDEX IF NOT EXISTS idx_users_role ON users(role);
CREATE INDEX IF NOT EXISTS idx_users_is_active ON users(is_active);

CREATE INDEX IF NOT EXISTS idx_car_listings_user_id ON car_listings(user_id);
CREATE INDEX IF NOT EXISTS idx_car_listings_status ON car_listings(status);
CREATE INDEX IF NOT EXISTS idx_car_listings_brand_model ON car_listings(brand, model);
CREATE INDEX IF NOT EXISTS idx_car_listings_year ON car_listings(year);
CREATE INDEX IF NOT EXISTS idx_car_listings_price ON car_listings(current_price);
CREATE INDEX IF NOT EXISTS idx_car_listings_auction_end ON car_listings(auction_end);
CREATE INDEX IF NOT EXISTS idx_car_listings_created_at ON car_listings(created_at);

CREATE INDEX IF NOT EXISTS idx_bids_listing_id ON bids(listing_id);
CREATE INDEX IF NOT EXISTS idx_bids_user_id ON bids(user_id);
CREATE INDEX IF NOT EXISTS idx_bids_amount ON bids(amount);
CREATE INDEX IF NOT EXISTS idx_bids_created_at ON bids(created_at);

CREATE INDEX IF NOT EXISTS idx_favorites_user_id ON favorites(user_id);
CREATE INDEX IF NOT EXISTS idx_favorites_listing_id ON favorites(listing_id);

CREATE INDEX IF NOT EXISTS idx_notifications_user_id ON notifications(user_id);
CREATE INDEX IF NOT EXISTS idx_notifications_is_read ON notifications(is_read);
CREATE INDEX IF NOT EXISTS idx_notifications_created_at ON notifications(created_at);

CREATE INDEX IF NOT EXISTS idx_messages_sender_id ON messages(sender_id);
CREATE INDEX IF NOT EXISTS idx_messages_recipient_id ON messages(recipient_id);
CREATE INDEX IF NOT EXISTS idx_messages_listing_id ON messages(listing_id);
CREATE INDEX IF NOT EXISTS idx_messages_is_read ON messages(is_read);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_car_listings_updated_at BEFORE UPDATE ON car_listings
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_banners_updated_at BEFORE UPDATE ON banners
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
INSERT INTO users (phone, email, first_name, last_name, role, is_active) 
VALUES 
    ('+992901234567', 'admin@autoauction.tj', '–ê–¥–º–∏–Ω', '–°–∏—Å—Ç–µ–º–Ω—ã–π', 'admin', true),
    ('+992911234567', 'seller@autoauction.tj', '–ü—Ä–æ–¥–∞–≤–µ—Ü', '–¢–µ—Å—Ç–æ–≤—ã–π', 'seller', true),
    ('+992921234567', 'buyer@autoauction.tj', '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å', '–¢–µ—Å—Ç–æ–≤—ã–π', 'buyer', true)
ON CONFLICT (phone) DO NOTHING;

-- –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞
INSERT INTO banners (title, description, image_url, is_active, display_order)
VALUES 
    ('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AutoBid.TJ', '–õ—É—á—à–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –≤ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–µ', '/assets/banner1.jpg', true, 1)
ON CONFLICT DO NOTHING;

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–æ–≤
CREATE OR REPLACE FUNCTION check_auction_end()
RETURNS void AS $$
BEGIN
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤
    UPDATE car_listings 
    SET status = 'ended' 
    WHERE status = 'active' 
    AND auction_end < CURRENT_TIMESTAMP;
    
    -- –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤
    INSERT INTO notifications (user_id, title, message, type, listing_id)
    SELECT DISTINCT 
        b.user_id,
        '–ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω',
        CASE 
            WHEN b.amount = (SELECT MAX(amount) FROM bids WHERE listing_id = b.listing_id)
            THEN '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∞—É–∫—Ü–∏–æ–Ω –Ω–∞ ' || cl.brand || ' ' || cl.model
            ELSE '–ê—É–∫—Ü–∏–æ–Ω –Ω–∞ ' || cl.brand || ' ' || cl.model || ' –∑–∞–≤–µ—Ä—à–µ–Ω. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.'
        END,
        CASE 
            WHEN b.amount = (SELECT MAX(amount) FROM bids WHERE listing_id = b.listing_id)
            THEN 'success'
            ELSE 'info'
        END,
        cl.id
    FROM bids b
    JOIN car_listings cl ON b.listing_id = cl.id
    WHERE cl.status = 'ended' 
    AND cl.updated_at > CURRENT_TIMESTAMP - INTERVAL '1 minute'
    AND NOT EXISTS (
        SELECT 1 FROM notifications n 
        WHERE n.user_id = b.user_id 
        AND n.listing_id = cl.id 
        AND n.type IN ('success', 'info')
        AND n.created_at > cl.updated_at
    );
END;
$$ LANGUAGE plpgsql;

COMMIT;

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
SELECT '–°–æ–∑–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: ' || COUNT(*) as result
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name IN ('users', 'car_listings', 'bids', 'favorites', 'notifications', 'car_alerts', 'banners', 'messages', 'auto_bids');

-- –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SELECT 
    schemaname as schema,
    tablename as table_name,
    COALESCE(n_tup_ins, 0) as inserts,
    COALESCE(n_tup_upd, 0) as updates,
    COALESCE(n_tup_del, 0) as deletes,
    COALESCE(n_live_tup, 0) as live_rows
FROM pg_stat_user_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

EOF

echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:"
echo "   - users (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)"
echo "   - car_listings (–æ–±—ä—è–≤–ª–µ–Ω–∏—è)"  
echo "   - bids (—Å—Ç–∞–≤–∫–∏)"
echo "   - favorites (–∏–∑–±—Ä–∞–Ω–Ω–æ–µ)"
echo "   - notifications (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)"
echo "   - car_alerts (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è)"
echo "   - banners (–±–∞–Ω–Ω–µ—Ä—ã)"
echo "   - messages (—Å–æ–æ–±—â–µ–Ω–∏—è)"
echo "   - auto_bids (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞–≤–∫–∏)"
echo ""
echo "üîß –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
echo "‚ö° –°–æ–∑–¥–∞–Ω—ã —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫"
echo "üéØ –°–æ–∑–¥–∞–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞–º–∏"
echo ""
echo "üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:"
echo "   - 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (admin, seller, buyer)"
echo "   - 1 —Ç–µ—Å—Ç–æ–≤—ã–π –±–∞–Ω–Ω–µ—Ä"
echo ""